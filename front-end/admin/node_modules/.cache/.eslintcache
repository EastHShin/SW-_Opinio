[{"C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\index.js":"1","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\App.js":"2","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\reportWebVitals.js":"3","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\login.js":"4","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\front.js":"5","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\NavBar.js":"6","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\users.js":"7","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\userUpdate.js":"8","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\userInfo.js":"9","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\usersbackenddummy.js":"10","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\userBoard.js":"11","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\userComment.js":"12","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\blame\\report.js":"13","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\boardbackenddummy.js":"14","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\boardDelete.js":"15","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\blame\\reportbackenddummy.js":"16","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\userDelete.js":"17","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\commentDelete.js":"18","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\blame\\reportConfirm.js":"19"},{"size":500,"mtime":1636443383868,"results":"20","hashOfConfig":"21"},{"size":2988,"mtime":1639390900805,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1636443384374,"results":"23","hashOfConfig":"21"},{"size":4402,"mtime":1639393976539,"results":"24","hashOfConfig":"21"},{"size":280,"mtime":1639047721641,"results":"25","hashOfConfig":"21"},{"size":1867,"mtime":1639393379959,"results":"26","hashOfConfig":"21"},{"size":521,"mtime":1639211464061,"results":"27","hashOfConfig":"21"},{"size":4059,"mtime":1639393958623,"results":"28","hashOfConfig":"21"},{"size":2468,"mtime":1639393905097,"results":"29","hashOfConfig":"21"},{"size":4543,"mtime":1639393219926,"results":"30","hashOfConfig":"21"},{"size":534,"mtime":1639289472938,"results":"31","hashOfConfig":"21"},{"size":3441,"mtime":1639393871831,"results":"32","hashOfConfig":"21"},{"size":478,"mtime":1639211612281,"results":"33","hashOfConfig":"21"},{"size":5237,"mtime":1639393418637,"results":"34","hashOfConfig":"21"},{"size":2429,"mtime":1639393851549,"results":"35","hashOfConfig":"21"},{"size":7488,"mtime":1639398199027,"results":"36","hashOfConfig":"21"},{"size":2258,"mtime":1639394618786,"results":"37","hashOfConfig":"21"},{"size":1700,"mtime":1639393863554,"results":"38","hashOfConfig":"21"},{"size":5275,"mtime":1639397560289,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ohnjcw",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"42"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"42"},"C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\index.js",[],["95","96"],"C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\App.js",["97","98","99"],"import logo from './logo.png';\nimport './App.css';\n\nimport React from \"react\";\nimport { Route, Link, BrowserRouter, Routes, Navigate, useNavigate } from \"react-router-dom\";\nimport Login from \"./login\";\nimport Front from './front.js';\nimport Users from \"./user/users\";\nimport UserInfo from \"./user/userInfo\"\nimport UserUpdate from \"./user/userUpdate\"\nimport UserDelete from \"./user/userDelete\"\nimport Board from \"./board/userBoard\"\nimport Comment from \"./board/userComment\"\nimport BoardDelete from \"./board/boardDelete\"\nimport CommentDelete from \"./board/commentDelete\"\nimport Report from \"./blame/report\"\nimport ReportConfirm from \"./blame/reportConfirm\"\n\nconst RTL = ({check, value}) => {\n    if(localStorage.getItem('status') === 'OK') value = localStorage.getItem('status')\n    return value ? check : <Navigate to=\"/administrator\" replace />\n}\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div>\n                <BrowserRouter>\n                    <Routes>\n                        <Route exact path=\"/administrator\" element={<Login />} />\n                        <Route path=\"/administrator/front\" element={<RTL value={localStorage.getItem('status')} check={<Front />}> <Front /> </RTL>} />\n                        <Route path=\"/administrator/user\" element={<RTL value={localStorage.getItem('status')} check={<Users />}> <Users /> </RTL>} />\n                        <Route path=\"/administrator/user/update\" element={<RTL value={localStorage.getItem('status')} check={<UserUpdate />}> <UserUpdate /> </RTL>} />\n                        <Route path=\"/administrator/user/info\" element={<RTL value={localStorage.getItem('status')} check={<UserInfo />}> <UserInfo /> </RTL>} />\n                        <Route path=\"/administrator/user/delete\" element={<RTL value={localStorage.getItem('status')} check={<UserDelete />}> <UserDelete /> </RTL>} />\n                        <Route path=\"/administrator/report\" element={<RTL value={localStorage.getItem('status')} check={<Report />}> <Report /> </RTL>} />\n                        <Route path=\"/administrator/report/confirm\" element={<RTL value={localStorage.getItem('status')} check={<ReportConfirm />}> <ReportConfirm /> </RTL>} />\n                        <Route path=\"/administrator/board\" element={<RTL value={localStorage.getItem('status')} check={<Board />}> <Board /> </RTL>} />\n                        <Route path=\"/administrator/comment\" element={<RTL value={localStorage.getItem('status')} check={<Comment />}> <Comment /> </RTL>} />\n                        <Route path=\"/administrator/board/delete\" element={<RTL value={localStorage.getItem('status')} check={<BoardDelete />}> <BoardDelete /> </RTL>} />\n                        <Route path=\"/administrator/comment/delete\" element={<RTL value={localStorage.getItem('status')} check={<CommentDelete />}> <CommentDelete /> </RTL>} />\n                    </Routes>\n                </BrowserRouter>\n            </div>\n        </div>\n    );\n}\n\n\nexport default App;\n","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\reportWebVitals.js",[],"C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\login.js",["100","101","102","103","104","105"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport LoginIcon from '@material-ui/icons/AlternateEmail';\r\nimport PasswordIcon from '@material-ui/icons/VpnKey';\r\nimport './login.css'\r\nimport axios from \"axios\";\r\nimport logo from \"./logo.png\";\r\n\r\nlet timer;\r\ntoast.configure()\r\n\r\nconst setLogoutTimer = (expirationTime, email) => dispatch => {\r\n    timer = setTimeout(() => {\r\n        dispatch(logoutUser(email));\r\n    }, expirationTime);\r\n};\r\n\r\nasync function logoutUser() {\r\n    const email = localStorage.getItem('email')\r\n    return await axios.post('/api/auth/logout', email, {\r\n        headers: {\"Content-Type\": `application/json`}\r\n    })\r\n        .then(function (res) {\r\n            if(res.status == 200) {\r\n                localStorage.clear()\r\n            }\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const nav = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('status')) {\r\n            nav(\"/administrator/front\")\r\n        }\r\n    }, [])\r\n\r\n    async function log() {\r\n        let item = {email,password}\r\n        let web = \"/api/auth/login\"\r\n        return await axios.post(web, item, {\r\n            headers: { \"Content-Type\": `application/json` }\r\n        })\r\n            .then(function (res) {\r\n                localStorage.clear()\r\n                localStorage.setItem(\"email\", email)\r\n                localStorage.setItem(\"status\", res.data.status)\r\n                localStorage.setItem(\"auth\", res.headers.authorization)\r\n                axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n                console.warn(localStorage.getItem(\"auth\"))\r\n                console.warn(localStorage.getItem('status'))\r\n                toast.success('로그인 완료', {position: toast.POSITION.TOP_CENTER, autoClose:1500})\r\n                nav(\"/administrator/front\")\r\n            })\r\n            .catch(function (error) {\r\n                toast.error('아이디나 비밀번호가 틀렸습니다.', {position: toast.POSITION.TOP_CENTER, autoClose:2500})\r\n                nav(\"/administrator\")\r\n            })\r\n    }\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n            <div className=\"inline\">\r\n                <span className=\"red\">관리자 </span>\r\n                <span>화면 로그인</span>\r\n            </div>\r\n            <a\r\n                className=\"App-link\"\r\n                href=\"https://github.com/EastHShin/SWCapstone_Opinio\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                Source Code\r\n            </a>\r\n            <Container>\r\n                <Form>\r\n                    <div className=\"center\">\r\n                        <LoginIcon color=\"secondary\" fontSize=\"large\"></LoginIcon>\r\n                        <Form.Group className=\"inline\" controlId=\"form.Email\" style={{width: \"370px\"}}>\r\n                            <Form.Control type=\"email\" placeholder=\"이메일\"\r\n                                          onChange={(e) => setEmail(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div className=\"center\">\r\n                        <PasswordIcon color=\"secondary\" fontSize=\"large\"></PasswordIcon>\r\n                        <Form.Group className=\"inline\" controlId=\"form.Password\" style={{width: \"370px\"}}>\r\n                            <Form.Control className=\"wid\" type=\"password\" placeholder=\"비밀번호\"\r\n                                          onChange={(e) => setPassword(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div>\r\n                        <Button variant=\"success\" onClick={log}>Login</Button>\r\n                    </div>\r\n                </Form>\r\n            </Container>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\front.js",[],"C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\NavBar.js",["106","107","108"],"import React, {useState, useEffect, Component} from \"react\";\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './NavBar.css';\r\nimport './login.js'\r\n\r\nfunction NavBar() {\r\n    const nav = useNavigate()\r\n\r\n    async function logoutUser() {\r\n        const email = localStorage.getItem('email')\r\n        let web = \"/api/auth/logout\"\r\n\r\n        return await axios.post(web, email, {\r\n            headers: {\"Content-Type\": `application/json`}\r\n        })\r\n            .then(function (res) {\r\n                if(res.status === 200) {\r\n                    toast.success('로그아웃 완료', {position: toast.POSITION.TOP_CENTER, autoClose:1500})\r\n                    localStorage.clear()\r\n                    nav(\"/administrator\")\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    function logout() {\r\n        if(localStorage.getItem('email')) {\r\n            logoutUser()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className=\"top\">\r\n            <ul>\r\n                <li className=\"inline\"><Link onClick={logout} to=\"/administrator\" className=\"inline\">로그아웃</Link></li>\r\n                <li className=\"inline\"><Link to=\"/administrator/front\" className=\"inline\">메인화면</Link></li>\r\n                <li className=\"inline\"><Link to=\"/administrator/user\" className=\"inline\">유저관리</Link></li>\r\n                <li className=\"inline\"><Link to=\"/administrator/report\" className=\"inline\">신고관리</Link></li>\r\n                <li className=\"inline\"><Link to=\"/administrator/board\" className=\"inline\">게시글/댓글</Link></li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\users.js",["109","110","111","112"],"import React from \"react\";\r\nimport NavBar from \"../NavBar.js\";\r\nimport Table from './usersbackenddummy';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './users.css';\r\nimport UserIcon from '@material-ui/icons/Person';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Users() {\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar class=\"top\"/>\r\n            <h1>유저정보</h1>\r\n            <Table/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\userUpdate.js",["113","114","115","116"],"import React, { useState, useEffect, Component } from \"react\";\r\nimport NavBar from \"../NavBar.js\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './users.css';\r\nimport './userUpdate.css';\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction UserUpdate() {\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [point, setPoint] = useState(\"\")\r\n    const [mPlant, setmPlant] = useState(\"\")\r\n    const [subcription, setSubscr] = useState(\"\")\r\n    const [posts, setPosts] = useState(\"\")\r\n\r\n    async function Update() {\r\n        let sub\r\n        if(subcription === \"true\" || subcription === \"True\") {\r\n            sub = true\r\n        } else {\r\n            sub = false\r\n        }\r\n        let web = \"/api/admin/user/\" + localStorage.getItem(\"userId\")\r\n\r\n        if(name===\"\" || email===\"\" || point===\"\" || mPlant===\"\") {\r\n            return toast.error('이름, 이메일, 포인트, 슬롯의 내용을 모두 채워야합니다.', {position: toast.POSITION.TOP_CENTER, autoClose:2000})\r\n        }\r\n        return await axios.put(web, {\r\n            headers: { \"Content-Type\": `application/json` },\r\n            name: name,\r\n            email: email,\r\n            point: point,\r\n            maxPlantNum: mPlant,\r\n            subscription: sub\r\n        })\r\n            .then(function (res) {\r\n                toast.warn('회원 정보가 수정되었습니다.', {position: toast.POSITION.TOP_CENTER, autoClose:2500})\r\n            })\r\n    }\r\n\r\n    async function getValue() {\r\n        axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n        const token = localStorage.getItem('auth')\r\n        let web = \"/api/admin/user/\" + localStorage.getItem(\"userId\")\r\n        const response = await axios.get(web, {\r\n            headers: {\r\n                \"Content-Type\": `application/json`\r\n            }\r\n        })\r\n            .then(function (res) {\r\n                setPosts({name: [res.data.data.name], email:[res.data.data.email], point:[res.data.data.point],\r\n                    mPlant:[res.data.data.maxPlantNum], subscribe:[res.data.data.subcription]})\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getValue()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar class=\"top\" />\r\n            <h1>유저 업데이트</h1>\r\n            <div className={\"left\"}>\r\n                이름 <Form.Control className={\"inline2\"} type=\"text\" placeholder={posts.name}\r\n                                 onChange={(e) => setName(e.target.value)} style={{width: \"450px\"}}/><br/>\r\n                이메일 <Form.Control className={\"inline2\"} type=\"text\" placeholder={posts.email}\r\n                                  onChange={(e) => setEmail(e.target.value)} style={{width: \"450px\"}}/><br/>\r\n                포인트<Form.Control className={\"inline2\"} type=\"text\" placeholder={posts.point}\r\n                                 onChange={(e) => setPoint(e.target.value)} style={{width: \"450px\"}}/><br/>\r\n                식물슬롯개수<Form.Control className={\"inline2\"} type=\"text\" placeholder={posts.mPlant}\r\n                                    onChange={(e) => setmPlant(e.target.value)} style={{width: \"450px\"}}/><br/>\r\n                구독여부<Form.Control className={\"inline2\"} type=\"text\" placeholder=\"구독을 원할시 True 또는 true 입력\"\r\n                                  onChange={(e) => setSubscr(e.target.value)} style={{width: \"450px\"}}/><br/>\r\n                <Link to=\"/administrator/user\">\r\n                <Button variant=\"success\" className=\"mar\">뒤로 가기</Button>\r\n                </Link>\r\n                <Link to=\"/administrator/front\">\r\n                <Button variant=\"warning\" onClick={Update}>수정</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserUpdate;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\userInfo.js",["117","118","119"],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from \"../NavBar.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport './users.css';\r\nimport './userUpdate.css';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction UserInfo() {\r\n    const [posts, setPosts] = useState({data: []})\r\n    const fetchPostList = async () => {\r\n        axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n        const token = localStorage.getItem('auth')\r\n        let web = \"/api/admin/user/\" + localStorage.getItem(\"userId\")\r\n        const response = await axios.get(web, {\r\n            headers: {\r\n                \"Content-Type\": `application/json`\r\n            }\r\n        })\r\n            .then(function (res) {\r\n                setPosts({data: res.data.data})\r\n            })\r\n            .catch(function (error) {\r\n                if(error.status == 403) localStorage.clear()\r\n            })\r\n    }\r\n    function checkSub() {\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPostList()\r\n            .then(checkSub())\r\n    }, [setPosts])\r\n\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar class=\"top\"/>\r\n            <h1>유저 세부정보</h1>\r\n            <div className=\"info\" style={{color: \"#FFFFFF\"}}>\r\n                유저 번호:&nbsp;\r\n                <span>{posts.data.id}</span>\r\n                <br/>\r\n                유저 이름:&nbsp;\r\n                <span>{posts.data.name}</span>\r\n                <br/>\r\n                이메일:&nbsp;\r\n                <span>{posts.data.email}</span>\r\n                <br/>\r\n                키우는 식물의 수:&nbsp;\r\n                <span>{posts.data.plantNum}</span>\r\n                <br/>\r\n                식물의 슬롯 개수:&nbsp;\r\n                <span>{posts.data.maxPlantNum}</span>\r\n                <br/>\r\n                식물 질병 구독 여부:&nbsp;\r\n                <span>{posts.data.subcription===true && <span style={{color: \"#1134A6\"}}>YES</span>}</span>\r\n                <span>{posts.data.subcription===false && <span style={{color: \"#FF2800\"}}>NO</span>}</span>\r\n                <br/>\r\n                포인트:&nbsp;\r\n                <span>{posts.data.point}</span>\r\n                <br/>\r\n                <Link to=\"/administrator/user\">\r\n                    <Button variant=\"danger\">뒤로 가기</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\usersbackenddummy.js",["120","121","122","123","124"],"import React, {useEffect, useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport UserIcon from '@material-ui/icons/Person';\r\nimport './users.css';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Table = () => {\r\n    const [posts, setPosts] = useState({user: []})\r\n    const [idx, setIdx] = useState(\"\")\r\n    const nav = useNavigate()\r\n\r\n    const fetchPostList = async () => {\r\n        axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n        const token = localStorage.getItem(\"auth\")\r\n        let web = \"/api/admin/user/\"\r\n        const response = await axios.get(web, {\r\n            headers: {\r\n                \"Content-Type\": `application/json`\r\n            }\r\n        })\r\n            .then(function (res) {\r\n                if(idx===\"\")setPosts({data: res.data.data})\r\n                else {\r\n                    let flag = 0\r\n                    for(let i = 0; i < res.data.data.length; i++) {\r\n                        if(res.data.data[i].id == idx) {\r\n                            flag = 1\r\n                            setPosts({data: [res.data.data[i]]})\r\n                        }\r\n                    }\r\n                    if(flag === 0) {\r\n                        setPosts({data: res.data.data})\r\n                        toast.warn('회원 번호가 존재하지 않습니다.', {position: toast.POSITION.TOP_CENTER, autoClose:2000})\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                if(error.response.status == 403) {\r\n                    localStorage.clear()\r\n                    nav(\"/administrator\")\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPostList()\r\n    }, [setPosts])\r\n\r\n    function getId(val) {\r\n        localStorage.setItem(\"userId\", val)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <UserIcon fontSize=\"large\"></UserIcon>\r\n            <Form.Group class=\"inline\" controlId=\"form.Email\" style={{width: \"370px\"}}>\r\n                <Form.Control type=\"email\" placeholder=\"아이디 번호로 검색\"\r\n                              onChange={(e) => setIdx(e.target.value)}/>\r\n            </Form.Group>\r\n            <Link to=\"/administrator/user\">\r\n                <Button variant=\"success\" onClick={fetchPostList}>검색</Button>\r\n            </Link>\r\n            <ReactBootStrap.Table striped bordered hover className=\"table\">\r\n                <thead>\r\n                <tr className=\"head_font\">\r\n                    <th class=\"table-light\" width=\"140px\">아이디 번호</th>\r\n                    <th class=\"table-primary\">닉네임</th>\r\n                    <th class=\"table-light\">이메일</th>\r\n                    <th class=\"table-warning\" width=\"250px\">수정 / 삭제</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    posts.data && posts.data.map((item) => (\r\n                        <tr key={item.id} class=\"content_font\">\r\n                            <td class=\"table-light\" valign=\"middle\">{item.id}</td>\r\n                            <td class=\"table-primary\" valign=\"middle\">{item.user_name}</td>\r\n                            <td class=\"table-light\" valign=\"middle\">{item.user_email}</td>\r\n                            <td class=\"table-warning\" valign=\"middle\">\r\n                                <Link to=\"/administrator/user/info\">\r\n                                    <Button onClick={() => getId(item.id)} variant=\"info\" className=\"mar\">정보</Button>\r\n                                </Link>\r\n                                <Link to=\"/administrator/user/update\">\r\n                                    <Button onClick={() => getId(item.id)} variant=\"warning\"\r\n                                            className=\"mar\">수정</Button>\r\n                                </Link>\r\n                                <Link to=\"/administrator/user/delete\">\r\n                                <Button onClick={() => getId(item.id)} variant=\"danger\">삭제</Button>\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </ReactBootStrap.Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\userBoard.js",["125","126","127","128"],"import React from \"react\";\r\nimport NavBar from \"../NavBar.js\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from './boardbackenddummy.js'\r\nimport \"./Board.css\"\r\nimport UserIcon from '@material-ui/icons/Person';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Board() {\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar class=\"top\" />\r\n            <h1>게시글/댓글 관리</h1>\r\n            <Table/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\userComment.js",["129","130","131","132","133","134","135"],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport NavBar from \"../NavBar.js\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from './boardbackenddummy.js';\r\nimport \"./Board.css\"\r\nimport UserIcon from '@material-ui/icons/Person';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Comment() {\r\n    const [posts, setPosts] = useState(\"\")\r\n    const [idx, setIdx] = useState(\"\")\r\n\r\n    const fetchPostList = async () => {\r\n        axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n        const token = localStorage.getItem('auth')\r\n        let web = \"/api/admin/community/\" + localStorage.getItem(\"boardId\")\r\n        const response = await axios.get(web, {\r\n            headers: {\r\n                \"Content-Type\": `application/json`\r\n            }\r\n        })\r\n            .then(function (res) {\r\n                setPosts({comments: res.data.data.comments, writerId: [res.data.data.writerId],\r\n                writerName: [res.data.data.writerName], id: [res.data.data.id]})\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPostList()\r\n    }, [setPosts])\r\n\r\n    function getId(val) {\r\n        localStorage.setItem(\"commentId\", val)\r\n    }\r\n\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar className=\"top\" />\r\n            <h1>댓글</h1>\r\n            <div className=\"left\" style={{fontSize:\"20px\"}}>\r\n                게시글 번호: {posts.id}\r\n                <br/>\r\n                작성자 번호: {posts.writerId}\r\n                <br/>\r\n                작성자 닉네임: {posts.writerName}\r\n            </div>\r\n            <ReactBootStrap.Table striped bordered hover className=\"table\">\r\n                <thead>\r\n                <tr className=\"head_font\">\r\n                    <th class=\"table-info\" width=\"140px\">댓글 번호</th>\r\n                    <th className=\"table-primary\" width=\"140px\">작성자 번호</th>\r\n                    <th className=\"table-light\" width=\"200px\">작성자</th>\r\n                    <th class=\"table-light\">댓글 내용</th>\r\n                    <th class=\"table-warning\" width=\"220px\">삭제</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    posts.comments && posts.comments.map((item) => (\r\n                        <tr key={item} class=\"content_font\">\r\n                            <td className=\"table-info\" valign=\"middle\">{item.comment_id}</td>\r\n                            <td className=\"table-primary\" valign=\"middle\">{item.writer_id}</td>\r\n                            <td className=\"table-light\" valign=\"middle\">{item.writer}</td>\r\n                            <td className=\"table-light\" valign=\"middle\">{item.content}</td>\r\n                            <td className=\"table-warning\" valign=\"middle\">\r\n                                <Link to=\"/administrator/comment/delete\">\r\n                                    <Button variant=\"danger\"\r\n                                            onClick={() => getId(item.comment_id)}>게시글 삭제</Button>\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </ReactBootStrap.Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comment;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\blame\\report.js",["136","137","138"],"import React from \"react\";\r\nimport NavBar from \"../NavBar.js\";\r\nimport Table from \"./reportbackenddummy\"\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './report.css'\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Report() {\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar className=\"top\" />\r\n            <h1>유저신고</h1>\r\n            <Table />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Report;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\boardbackenddummy.js",["139","140","141","142","143"],"import React, {useEffect, useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport UserIcon from '@material-ui/icons/Person';\r\nimport './Board.css'\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Table = () => {\r\n    const [posts, setPosts] = useState({user: []})\r\n    const [idx, setIdx] = useState(\"\")\r\n    const nav = useNavigate()\r\n\r\n    const fetchPostList = async () => {\r\n        axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n        const token = localStorage.getItem('auth')\r\n        let web = \"/api/admin/community\"\r\n        const response = await axios.get(web, {\r\n            headers: {\r\n                \"Content-Type\": `application/json`\r\n            }\r\n        })\r\n            .then(function (res) {\r\n                if (idx === \"\") setPosts({data: res.data.data})\r\n                else {\r\n                    let flag = 0\r\n                    for (let i = 0; i < res.data.data.length; i++) {\r\n                        if (res.data.data[i].boardId == idx) {\r\n                            flag = 1\r\n                            setPosts({data: [res.data.data[i]]})\r\n                        }\r\n                    }\r\n                    if (flag === 0) {\r\n                        setPosts({data: res.data.data})\r\n                        toast.warn('게시글 번호가 존재하지 않습니다.', {position: toast.POSITION.TOP_CENTER, autoClose: 2000})\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response.status == 403) {\r\n                    localStorage.clear()\r\n                    nav(\"/administrator\")\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPostList()\r\n    }, [setPosts])\r\n\r\n    function getId(val) {\r\n        localStorage.setItem(\"boardId\", val)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <UserIcon fontSize=\"large\"></UserIcon>\r\n            <Form.Group class=\"inline\" controlId=\"form.Email\" style={{width: \"370px\"}}>\r\n                <Form.Control type=\"email\" placeholder=\"게시글 번호로 검색\"\r\n                              onChange={(e) => setIdx(e.target.value)}/>\r\n            </Form.Group>\r\n            <Link to=\"/administrator/board\">\r\n                <Button variant=\"success\" onClick={fetchPostList}>검색</Button>\r\n            </Link>\r\n            <ReactBootStrap.Table striped bordered hover className=\"table\">\r\n                <thead>\r\n                <tr className=\"head_font\">\r\n                    <th className=\"table-primary\" width=\"100px\">게시글 번호</th>\r\n                    <th className=\"table-light\" width=\"100px\">작성자 번호</th>\r\n                    <th className=\"table-danger\" width=\"100px\">신고된 횟수</th>\r\n                    <th className=\"table-primary\" width=\"230px\">제목</th>\r\n                    <th className=\"table-light\" width=\"330px\">내용</th>\r\n                    <th className=\"table-warning\" width=\"250px\">수정 / 삭제</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    posts.data && posts.data.map((item) => (\r\n                        <tr key={item.id} class=\"content_font\">\r\n                            <td className=\"table-primary\" valign=\"middle\">{item.boardId}</td>\r\n                            <td className=\"table-light\" valign=\"middle\">{item.writerId}</td>\r\n                            <td className=\"table-danger\" valign=\"middle\">\r\n                                {item.countedReports > 0 &&\r\n                                <div style={{color: \"#FF2800\", fontSize: \"24px\", fontWeight: \"Bold\"}}>\r\n                                    {item.countedReports}\r\n                                </div>}\r\n                                {item.countedReports === 0 && item.countedReports}\r\n                            </td>\r\n                            <td className=\"table-primary\" valign=\"middle\">{item.title}</td>\r\n                            <td className=\"table-light\" valign=\"middle\">{item.content}</td>\r\n                            <td className=\"table-warning\" valign=\"middle\">\r\n                                <Link to=\"/administrator/comment\">\r\n                                    <Button variant=\"btn btn-secondary\"\r\n                                            onClick={() => getId(item.boardId)}\r\n                                            className=\"mar\">댓글 조회</Button>\r\n                                </Link>\r\n                                <Link to=\"/administrator/board/delete\">\r\n                                    <Button variant=\"danger\"\r\n                                            onClick={() => getId(item.boardId)}>게시글 삭제</Button>\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </ReactBootStrap.Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\boardDelete.js",["144","145","146"],"import React, {useState, useEffect, Component} from \"react\";\r\nimport axios from 'axios';\r\nimport NavBar from \"../NavBar.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './Board.css';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction BoardDelete() {\r\n    const [posts, setPosts] = useState(\"\")\r\n\r\n    async function del() {\r\n        let web = \"/api/admin/community/\" + localStorage.getItem(\"boardId\")\r\n\r\n        return await axios.delete(web, {\r\n            headers: {\"Content-Type\": `application/json`}\r\n        })\r\n            .then(function (res) {\r\n                toast.error('게시글이 삭제되었습니다.', {position: toast.POSITION.TOP_CENTER, autoClose:2500})\r\n            })\r\n    }\r\n\r\n    async function getValue() {\r\n        axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n        const token = localStorage.getItem('auth')\r\n        let web = \"/api/admin/community/\" + localStorage.getItem(\"boardId\")\r\n        const response = await axios.get(web, {\r\n            headers: {\r\n                \"Content-Type\": `application/json`\r\n            }\r\n        })\r\n            .then(function (res) {\r\n                setPosts({\r\n                    name: [res.data.data.writerName], id: [res.data.data.id],\r\n                    writerId: [res.data.data.writerId], content: [res.data.data.content]\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getValue()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar className=\"top\"/>\r\n            <h2 className=\"warn\">해당 게시글과 댓글을 정말 삭제하시겠습니까?</h2>\r\n            <h3 className=\"infor\">\r\n                작성자 닉네임: {posts.name}\r\n                <br/>\r\n                작성자 ID번호: {posts.writerId}\r\n                <br/>\r\n                게시글 번호: {posts.id}\r\n                <br/>\r\n                게시글 내용: {posts.content}\r\n                <br/>\r\n            </h3>\r\n            <Link to=\"/administrator/board\">\r\n                <Button className=\"mar\" variant=\"success\">뒤로 가기</Button>\r\n            </Link>\r\n            <Link to=\"/administrator/front\">\r\n                <Button variant=\"danger\" onClick={del}>삭제 합니다</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BoardDelete;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\blame\\reportbackenddummy.js",["147","148","149","150"],"import React, {useEffect, useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './report.css';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Table() {\r\n    const [posts, setPosts] = useState({user: []})\r\n    const nav = useNavigate()\r\n\r\n    useEffect(() => {\r\n        const fetchPostList = async () => {\r\n            axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n            const token = localStorage.getItem('auth')\r\n            let web = \"/api/admin/community/report/all\"\r\n            const response = await axios.get(web, {\r\n                headers: {\r\n                    \"Content-Type\": `application/json`\r\n                }\r\n            })\r\n                .then(function (res) {\r\n                    setPosts({data: res.data.data})\r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response.status == 403) {\r\n                        localStorage.clear()\r\n                        nav(\"/administrator\")\r\n                    }\r\n                })\r\n        }\r\n        fetchPostList()\r\n    }, [setPosts])\r\n\r\n    function getId(report, board, comment, isblocked) {\r\n        localStorage.setItem(\"reportId\", report)\r\n        if (board != null) localStorage.setItem(\"boardId\", board)\r\n        else localStorage.setItem(\"boardId\", -1)\r\n        if (comment != null) localStorage.setItem(\"commentId\", comment)\r\n        else localStorage.setItem(\"commentId\", -1)\r\n        if (isblocked === 1) localStorage.setItem(\"isBlocked\", isblocked)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ReactBootStrap.Table striped bordered hover className=\"table\">\r\n                <thead>\r\n                <tr className=\"head_font\">\r\n                    <th className=\"table-info\" width=\"110px\">신고 번호</th>\r\n                    <th className=\"table-secondary\" width=\"135px\">게시글/댓글</th>\r\n                    <th className=\"table-primary\" width=\"130px\">게시글 번호</th>\r\n                    <th className=\"table-info\" width=\"110px\">댓글 번호</th>\r\n                    <th className=\"table-light\" width=\"110px\">해결 여부</th>\r\n                    <th className=\"table-primary\">신고 내용</th>\r\n                    <th className=\"table-warning\" width=\"180px\">해결</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    posts.data && posts.data.map((item) => (\r\n                        <tr key={item.id} className=\"content_font\">\r\n                            <td className=\"table-info\" valign=\"middle\">{item.report_id}</td>\r\n                            {\r\n                                item.tag === \"BOARD\" &&\r\n                                <td className=\"table-secondary\" valign=\"middle\">게시글</td>\r\n                            }\r\n                            {\r\n                                item.tag === \"COMMENT\" &&\r\n                                <td className=\"table-secondary\" valign=\"middle\">댓글</td>\r\n                            }\r\n                            {\r\n                                item.board_id != null &&\r\n                                <td className=\"table-primary\" valign=\"middle\">{item.board_id}</td>\r\n                            }\r\n                            {\r\n                                item.board_id == null &&\r\n                                <td className=\"table-primary\" valign=\"middle\">X</td>\r\n                            }\r\n                            {\r\n                                item.comment_id != null &&\r\n                                <td className=\"table-info\" valign=\"middle\">{item.comment_id}</td>\r\n                            }\r\n                            {\r\n                                item.comment_id == null &&\r\n                                <td className=\"table-info\" valign=\"middle\">X</td>\r\n                            }\r\n                            {\r\n                                item.state === \"NOTPROCESSED\" &&\r\n                                <td className=\"table-warning\" valign=\"middle\">{item.state}</td>\r\n                            }\r\n                            {\r\n                                item.state === \"COMPLETE\" &&\r\n                                <td className=\"table-success\" valign=\"middle\">{item.state}</td>\r\n                            }\r\n                            {\r\n                                (item.state === \"AUTOCOMPLETE\" && item.is_blocked === true) &&\r\n                                <td className=\"table-danger\" valign=\"middle\">BLOCK</td>\r\n                            }\r\n                            {\r\n                                (item.state === \"AUTOCOMPLETE\" && item.is_blocked === false) &&\r\n                                <td className=\"table-success\" valign=\"middle\">UNBLOCK</td>\r\n                            }\r\n                            <td className=\"table-primary\" valign=\"middle\">{item.reason}</td>\r\n                            {\r\n                                (item.state === \"NOTPROCESSED\" && item.tag === \"BOARD\") &&\r\n                                <td className=\"table-warning\" valign=\"middle\">\r\n                                    <Link to=\"/administrator/report/confirm\">\r\n                                        <Button variant=\"warning\"\r\n                                                onClick={() => getId(item.report_id, item.board_id, item.comment_id, 0)}>게시글\r\n                                            처리</Button>\r\n                                    </Link>\r\n                                </td>\r\n                            }\r\n                            {\r\n                                (item.state === \"NOTPROCESSED\" && item.tag === \"COMMENT\") &&\r\n                                <td className=\"table-warning\" valign=\"middle\">\r\n                                    <Link to=\"/administrator/report/confirm\">\r\n                                        <Button variant=\"warning\"\r\n                                                onClick={() => getId(item.report_id, item.board_id, item.comment_id, 0)}>댓글\r\n                                            처리</Button>\r\n                                    </Link>\r\n                                </td>\r\n                            }\r\n                            {\r\n                                (item.state === \"AUTOCOMPLETE\" && item.is_blocked === true) &&\r\n                                <td className=\"table-warning\" valign=\"middle\">\r\n                                    <Link to=\"/administrator/report/confirm\">\r\n                                        <Button variant=\"warning\"\r\n                                                onClick={() => getId(item.report_id, item.board_id, item.comment_id, 1)}>차단 해제\r\n                                        </Button>\r\n                                    </Link>\r\n                                </td>\r\n                            }\r\n                            {\r\n                                (item.state === \"COMPLETE\" || (item.state === \"AUTOCOMPLETE\" && item.is_blocked === false)) &&\r\n                                <td className=\"table-warning\" valign=\"middle\"></td>\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </ReactBootStrap.Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\user\\userDelete.js",["151","152","153"],"import React, { useState, useEffect, Component } from \"react\";\r\nimport axios from 'axios';\r\nimport NavBar from \"../NavBar.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './users.css';\r\nimport './userUpdate.css';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction UserDelete() {\r\n    const [posts, setPosts] = useState(\"\")\r\n\r\n    async function del() {\r\n        let web = \"/api/admin/user/\" + localStorage.getItem(\"userId\")\r\n\r\n        return await axios.delete(web, {\r\n            headers: {\"Content-Type\": `application/json`},\r\n            id: localStorage.getItem(\"userId\")\r\n        })\r\n            .then(function (res) {\r\n                toast.error('회원 정보가 삭제되었습니다.', {position: toast.POSITION.TOP_CENTER, autoClose:2500})\r\n            })\r\n    }\r\n\r\n    async function getValue() {\r\n        axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n        const token = localStorage.getItem('auth')\r\n        let web = \"/api/admin/user/\" + localStorage.getItem(\"userId\")\r\n        const response = await axios.get(web, {\r\n            headers: {\r\n                \"Content-Type\": `application/json`\r\n            }\r\n        })\r\n            .then(function (res) {\r\n                setPosts({name: [res.data.data.name], email:[res.data.data.email], point:[res.data.data.point],\r\n                    mPlant:[res.data.data.maxPlantNum], subscribe:[res.data.data.subcription]})\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getValue()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar className=\"top\"/>\r\n            <h2 className=\"warn\">해당 유저를 정말 삭제하시겠습니까?</h2>\r\n            <h3>\r\n            닉네임: {posts.name}\r\n            <br/>\r\n            이메일: {posts.email}\r\n            </h3>\r\n            <Link to=\"/administrator/user\">\r\n                <Button className=\"mar\" variant=\"success\">뒤로 가기</Button>\r\n            </Link>\r\n            <Link to=\"/administrator/front\">\r\n                <Button variant=\"danger\" onClick={del}>삭제 합니다</Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDelete;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\board\\commentDelete.js",["154","155","156","157"],"import React, {useState, useEffect, Component} from \"react\";\r\nimport axios from 'axios';\r\nimport NavBar from \"../NavBar.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './Board.css';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction CommentDelete() {\r\n    const [posts, setPosts] = useState(\"\")\r\n\r\n    async function del() {\r\n        let web = \"/api/admin/community/comments/\" + localStorage.getItem(\"commentId\")\r\n\r\n        return await axios.delete(web, {\r\n            headers: {\"Content-Type\": `application/json`}\r\n        })\r\n            .then(function (res) {\r\n                toast.error('댓글이 삭제되었습니다.', {position: toast.POSITION.TOP_CENTER, autoClose:2500})\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar className=\"top\"/>\r\n            <h2 className=\"warn\">해당 댓글을 정말 삭제하시겠습니까?</h2>\r\n            {/*<h3 className=\"infor\">\r\n                작성자 닉네임: {posts.name}\r\n                <br/>\r\n                작성자 ID번호: {posts.writerId}\r\n                <br/>\r\n                게시글 번호: {posts.id}\r\n                <br/>\r\n                게시글 내용: {posts.content}\r\n                <br/>\r\n            </h3>*/}\r\n            <Link to=\"/administrator/comment\">\r\n                <Button className=\"mar\" variant=\"success\">뒤로 가기</Button>\r\n            </Link>\r\n            <Link to=\"/administrator/board\">\r\n                <Button variant=\"danger\" onClick={del}>삭제 합니다</Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentDelete;","C:\\Users\\skysaver00\\Plantrowth\\front-end\\admin\\src\\blame\\reportConfirm.js",["158","159","160","161","162","163","164","165","166"],"import React, {useState, useEffect, Component} from \"react\";\r\nimport axios from 'axios';\r\nimport NavBar from \"../NavBar.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './report.css';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ReportConfirm() {\r\n    const [posts, setPosts] = useState(\"\")\r\n\r\n    async function unblock() {\r\n        let web\r\n        console.warn(localStorage.getItem(\"commentId\"))\r\n        if(localStorage.getItem(\"commentId\")==-1) {\r\n            web = \"/api/admin/community/\" + localStorage.getItem(\"boardId\")\r\n        } else {\r\n            web = \"/api/admin/community/comment/\" + localStorage.getItem(\"commentId\")\r\n        }\r\n\r\n        return await axios.put(web, {\r\n            headers: {\"Content-Type\": `application/json`},\r\n        })\r\n            .then(function (res) {\r\n                toast.success(\"게시물을 차단 해제했습니다.\", {position: toast.POSITION.TOP_CENTER, autoClose:2500})\r\n            })\r\n    }\r\n\r\n    async function confirm() {\r\n        let web\r\n        if(localStorage.getItem(\"commentId\")==-1) {\r\n            web = \"/api/admin/community/board/report/\" + localStorage.getItem(\"reportId\")\r\n        } else {\r\n            web = \"/api/admin/community/comment/report/\" + localStorage.getItem(\"reportId\")\r\n        }\r\n\r\n        return await axios.post(web, {\r\n            headers: {\"Content-Type\": `application/json`},\r\n            report_id: localStorage.getItem(\"reportId\")\r\n        })\r\n            .then(function (res) {\r\n                toast.success('게시물 신고 상태를 COMPLETE로 변경했습니다.', {position: toast.POSITION.TOP_CENTER, autoClose:2500})\r\n            })\r\n    }\r\n\r\n    async function GetValue() {\r\n        axios.defaults.headers.common['X-AUTH-TOKEN'] = localStorage.getItem(\"auth\")\r\n        const token = localStorage.getItem('auth')\r\n        let web = \"/api/admin/community/report/all\"\r\n        const reportResponse = await axios.get(web, {\r\n            headers: {\r\n                \"Content-Type\": `application/json`\r\n            }\r\n        })\r\n            .then(function (res) {\r\n                for(let i = 0; i < res.data.data.length; i++) {\r\n                    if(res.data.data[i].report_id == localStorage.getItem(\"reportId\")) {\r\n                        localStorage.setItem(\"reportInfo:id\", res.data.data[i].report_id)\r\n                        localStorage.setItem(\"reportInfo:userId\", res.data.data[i].user_id)\r\n                        localStorage.setItem(\"reportInfo:userName\", res.data.data[i].username)\r\n                    }\r\n                }\r\n            })\r\n\r\n        web = \"/api/admin/community/\" + localStorage.getItem(\"boardId\")\r\n        const boardResponse = await axios.get(web, {\r\n            headers: {\r\n                \"Content-Type\": `application/json`\r\n            }\r\n        })\r\n            .then(function (res) {\r\n                setPosts({\r\n                    report: localStorage.getItem(\"reportInfo:id\"),\r\n                    userId: localStorage.getItem(\"reportInfo:userId\"),\r\n                    userName: localStorage.getItem(\"reportInfo:userName\"),\r\n                    boardId: res.data.data.id,\r\n                    content: res.data.data.content,\r\n                    writerId: res.data.data.writerId,\r\n                    writerName: res.data.data.writerName\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetValue()\r\n    }, [setPosts])\r\n\r\n    return (\r\n        <div className=\"front\">\r\n            <NavBar className=\"top\"/>\r\n            <h2 className=\"yellow\">신고 내용 확인</h2>\r\n            <h3 className=\"confirm\">\r\n                신고한 유저 닉네임: <span style={{color:\"#FEE12B\", fontWeight:\"Bold\"}}>{posts.userName}</span>\r\n                <br/>\r\n                신고한 유저 번호: <span style={{color:\"blue\"}}>{posts.userId}</span>\r\n                <br/>\r\n                신고 번호: <span style={{color:\"blue\"}}>{posts.report}</span>\r\n                <br/>\r\n                신고된 게시물 번호: <span style={{color:\"blue\"}}>{posts.boardId}</span>\r\n                <br/>\r\n                게시물 내용: <span style={{color:\"red\"}}>{posts.content}</span>\r\n                <br/>\r\n                게시물 작성자 번호: <span style={{color:\"blue\"}}>{posts.writerId}</span>\r\n                <br/>\r\n                게시물 작성자 닉네임: <span style={{color:\"red\", fontWeight:\"Bold\"}}>{posts.writerName}</span>\r\n                <br/>\r\n            </h3>\r\n            <Link to=\"/administrator/report\">\r\n                <Button className=\"mar\" variant=\"success\">뒤로 가기</Button>\r\n            </Link>\r\n            {\r\n                localStorage.getItem(\"isBlocked\") == 1 &&\r\n                <Link to=\"/administrator/front\">\r\n                    <Button variant=\"warning\" onClick={unblock}>차단 해제</Button>\r\n                </Link>\r\n            }\r\n            {\r\n                localStorage.getItem(\"isBlocked\") == 0 &&\r\n                <Link to=\"/administrator/front\">\r\n                    <Button variant=\"warning\" onClick={confirm}>처리 완료</Button>\r\n                </Link>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportConfirm;",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":1,"column":8,"nodeType":"173","messageId":"174","endLine":1,"endColumn":12},{"ruleId":"171","severity":1,"message":"175","line":5,"column":17,"nodeType":"173","messageId":"174","endLine":5,"endColumn":21},{"ruleId":"171","severity":1,"message":"176","line":5,"column":56,"nodeType":"173","messageId":"174","endLine":5,"endColumn":67},{"ruleId":"171","severity":1,"message":"177","line":5,"column":38,"nodeType":"173","messageId":"174","endLine":5,"endColumn":47},{"ruleId":"171","severity":1,"message":"175","line":6,"column":23,"nodeType":"173","messageId":"174","endLine":6,"endColumn":27},{"ruleId":"171","severity":1,"message":"178","line":15,"column":5,"nodeType":"173","messageId":"174","endLine":15,"endColumn":10},{"ruleId":"171","severity":1,"message":"179","line":18,"column":7,"nodeType":"173","messageId":"174","endLine":18,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":30,"column":27,"nodeType":"182","messageId":"183","endLine":30,"endColumn":29},{"ruleId":"184","severity":1,"message":"185","line":49,"column":8,"nodeType":"186","endLine":49,"endColumn":10,"suggestions":"187"},{"ruleId":"171","severity":1,"message":"188","line":1,"column":16,"nodeType":"173","messageId":"174","endLine":1,"endColumn":24},{"ruleId":"171","severity":1,"message":"189","line":1,"column":26,"nodeType":"173","messageId":"174","endLine":1,"endColumn":35},{"ruleId":"171","severity":1,"message":"177","line":1,"column":37,"nodeType":"173","messageId":"174","endLine":1,"endColumn":46},{"ruleId":"171","severity":1,"message":"190","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":12},{"ruleId":"171","severity":1,"message":"191","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":14},{"ruleId":"171","severity":1,"message":"192","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":16},{"ruleId":"171","severity":1,"message":"175","line":9,"column":9,"nodeType":"173","messageId":"174","endLine":9,"endColumn":13},{"ruleId":"171","severity":1,"message":"177","line":1,"column":38,"nodeType":"173","messageId":"174","endLine":1,"endColumn":47},{"ruleId":"171","severity":1,"message":"176","line":10,"column":10,"nodeType":"173","messageId":"174","endLine":10,"endColumn":21},{"ruleId":"171","severity":1,"message":"193","line":49,"column":15,"nodeType":"173","messageId":"174","endLine":49,"endColumn":20},{"ruleId":"171","severity":1,"message":"194","line":51,"column":15,"nodeType":"173","messageId":"174","endLine":51,"endColumn":23},{"ruleId":"171","severity":1,"message":"193","line":14,"column":15,"nodeType":"173","messageId":"174","endLine":14,"endColumn":20},{"ruleId":"171","severity":1,"message":"194","line":16,"column":15,"nodeType":"173","messageId":"174","endLine":16,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":25,"column":33,"nodeType":"182","messageId":"183","endLine":25,"endColumn":35},{"ruleId":"171","severity":1,"message":"193","line":21,"column":15,"nodeType":"173","messageId":"174","endLine":21,"endColumn":20},{"ruleId":"171","severity":1,"message":"194","line":23,"column":15,"nodeType":"173","messageId":"174","endLine":23,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":33,"column":48,"nodeType":"182","messageId":"183","endLine":33,"endColumn":50},{"ruleId":"180","severity":1,"message":"181","line":45,"column":42,"nodeType":"182","messageId":"183","endLine":45,"endColumn":44},{"ruleId":"184","severity":1,"message":"195","line":54,"column":8,"nodeType":"186","endLine":54,"endColumn":18,"suggestions":"196"},{"ruleId":"171","severity":1,"message":"190","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":12},{"ruleId":"171","severity":1,"message":"191","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":14},{"ruleId":"171","severity":1,"message":"192","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":16},{"ruleId":"171","severity":1,"message":"175","line":9,"column":9,"nodeType":"173","messageId":"174","endLine":9,"endColumn":13},{"ruleId":"171","severity":1,"message":"190","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":12},{"ruleId":"171","severity":1,"message":"197","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":13},{"ruleId":"171","severity":1,"message":"192","line":9,"column":8,"nodeType":"173","messageId":"174","endLine":9,"endColumn":16},{"ruleId":"171","severity":1,"message":"198","line":15,"column":12,"nodeType":"173","messageId":"174","endLine":15,"endColumn":15},{"ruleId":"171","severity":1,"message":"199","line":15,"column":17,"nodeType":"173","messageId":"174","endLine":15,"endColumn":23},{"ruleId":"171","severity":1,"message":"193","line":19,"column":15,"nodeType":"173","messageId":"174","endLine":19,"endColumn":20},{"ruleId":"171","severity":1,"message":"194","line":21,"column":15,"nodeType":"173","messageId":"174","endLine":21,"endColumn":23},{"ruleId":"171","severity":1,"message":"190","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":12},{"ruleId":"171","severity":1,"message":"191","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":14},{"ruleId":"171","severity":1,"message":"175","line":8,"column":9,"nodeType":"173","messageId":"174","endLine":8,"endColumn":13},{"ruleId":"171","severity":1,"message":"193","line":21,"column":15,"nodeType":"173","messageId":"174","endLine":21,"endColumn":20},{"ruleId":"171","severity":1,"message":"194","line":23,"column":15,"nodeType":"173","messageId":"174","endLine":23,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":33,"column":54,"nodeType":"182","messageId":"183","endLine":33,"endColumn":56},{"ruleId":"180","severity":1,"message":"181","line":45,"column":43,"nodeType":"182","messageId":"183","endLine":45,"endColumn":45},{"ruleId":"184","severity":1,"message":"195","line":54,"column":8,"nodeType":"186","endLine":54,"endColumn":18,"suggestions":"200"},{"ruleId":"171","severity":1,"message":"177","line":1,"column":37,"nodeType":"173","messageId":"174","endLine":1,"endColumn":46},{"ruleId":"171","severity":1,"message":"193","line":27,"column":15,"nodeType":"173","messageId":"174","endLine":27,"endColumn":20},{"ruleId":"171","severity":1,"message":"194","line":29,"column":15,"nodeType":"173","messageId":"174","endLine":29,"endColumn":23},{"ruleId":"171","severity":1,"message":"193","line":17,"column":19,"nodeType":"173","messageId":"174","endLine":17,"endColumn":24},{"ruleId":"171","severity":1,"message":"194","line":19,"column":19,"nodeType":"173","messageId":"174","endLine":19,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":28,"column":47,"nodeType":"182","messageId":"183","endLine":28,"endColumn":49},{"ruleId":"184","severity":1,"message":"185","line":35,"column":8,"nodeType":"186","endLine":35,"endColumn":18,"suggestions":"201"},{"ruleId":"171","severity":1,"message":"177","line":1,"column":38,"nodeType":"173","messageId":"174","endLine":1,"endColumn":47},{"ruleId":"171","severity":1,"message":"193","line":29,"column":15,"nodeType":"173","messageId":"174","endLine":29,"endColumn":20},{"ruleId":"171","severity":1,"message":"194","line":31,"column":15,"nodeType":"173","messageId":"174","endLine":31,"endColumn":23},{"ruleId":"171","severity":1,"message":"189","line":1,"column":26,"nodeType":"173","messageId":"174","endLine":1,"endColumn":35},{"ruleId":"171","severity":1,"message":"177","line":1,"column":37,"nodeType":"173","messageId":"174","endLine":1,"endColumn":46},{"ruleId":"171","severity":1,"message":"202","line":12,"column":12,"nodeType":"173","messageId":"174","endLine":12,"endColumn":17},{"ruleId":"171","severity":1,"message":"203","line":12,"column":19,"nodeType":"173","messageId":"174","endLine":12,"endColumn":27},{"ruleId":"171","severity":1,"message":"177","line":1,"column":37,"nodeType":"173","messageId":"174","endLine":1,"endColumn":46},{"ruleId":"180","severity":1,"message":"181","line":17,"column":45,"nodeType":"182","messageId":"183","endLine":17,"endColumn":47},{"ruleId":"180","severity":1,"message":"181","line":33,"column":45,"nodeType":"182","messageId":"183","endLine":33,"endColumn":47},{"ruleId":"171","severity":1,"message":"193","line":50,"column":15,"nodeType":"173","messageId":"174","endLine":50,"endColumn":20},{"ruleId":"171","severity":1,"message":"204","line":52,"column":15,"nodeType":"173","messageId":"174","endLine":52,"endColumn":29},{"ruleId":"180","severity":1,"message":"181","line":59,"column":51,"nodeType":"182","messageId":"183","endLine":59,"endColumn":53},{"ruleId":"171","severity":1,"message":"205","line":68,"column":15,"nodeType":"173","messageId":"174","endLine":68,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":114,"column":51,"nodeType":"182","messageId":"183","endLine":114,"endColumn":53},{"ruleId":"180","severity":1,"message":"181","line":120,"column":51,"nodeType":"182","messageId":"183","endLine":120,"endColumn":53},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useNavigate' is defined but never used.","'Component' is defined but never used.","'timer' is assigned a value but never used.","'setLogoutTimer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nav'. Either include it or remove the dependency array.","ArrayExpression",["208"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'UserIcon' is defined but never used.","'token' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPostList'. Either include it or remove the dependency array.",["209"],"'Table' is defined but never used.","'idx' is assigned a value but never used.","'setIdx' is assigned a value but never used.",["210"],["211"],"'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'reportResponse' is assigned a value but never used.","'boardResponse' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [nav]",{"range":"219","text":"220"},"Update the dependencies array to be: [fetchPostList, setPosts]",{"range":"221","text":"222"},{"range":"223","text":"222"},"Update the dependencies array to be: [nav, setPosts]",{"range":"224","text":"225"},[1484,1486],"[nav]",[1966,1976],"[fetchPostList, setPosts]",[1982,1992],[1231,1241],"[nav, setPosts]"]